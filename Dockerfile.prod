# Production-ready Dockerfile
FROM python:3.10-slim as production

# Set labels for better image management
LABEL maintainer="LangChain Apps"
LABEL version="1.0"
LABEL description="Production LangChain applications"

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies with optimization
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY --chown=app:app . .

# Set Python path
ENV PYTHONPATH=/app:$PYTHONPATH

# Create logs directory
RUN mkdir -p /app/logs && chown app:app /app/logs

# Switch to non-root user
USER app

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-7860}/health || exit 1

# Expose port
EXPOSE 7860

# Set default environment variables
ENV GRADIO_SERVER_NAME=0.0.0.0
ENV GRADIO_SERVER_PORT=7860
ENV OLLAMA_BASE_URL=http://host.docker.internal:11434
ENV PYTHONUNBUFFERED=1

# Default command
CMD ["python", "multimodel/multimodel.py"]
